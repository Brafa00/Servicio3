# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version:  ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and coverage
      working-directory: ./
      run: |
        pytest -v  --cov --cov-report=xml --cov-report=html
        pwd
        ls


    - name: fix code coverage paths
      working-directory: ./
      run: |
        pwd
        ls -la

    - uses: actions/checkout@v1

    - run: mkdir -p path/to/artifact

    - run: echo hello > path/to/artifact/world.txt

    - uses: actions/upload-artifact@master
      with:
       name: covertura
       path: path/to/artifact


  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis



      - uses: actions/checkout@master

      - uses: actions/download-artifact@master
        with:
          name: covertura
          path: path/to/artifact

      - name: fix code coverage paths
        working-directory: ./
        run: |
          pwd
          ls -la


      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
         projectBaseDir: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}



  deploy:

    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:

    - uses: actions/checkout@master
      with:
        fetch-depth: 0

    - name: set remote
      run: git remote set-url origin https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
    - name: push and deploy
      run: git push origin HEAD:master -f    
